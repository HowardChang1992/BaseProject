apply plugin: 'com.android.application'

/**
 * Gets the git sha prefix 7
 */
def getCommitSha() {
    def sha = "git rev-parse --verify HEAD".execute()
    def formatRule = "cut -b 1-7".execute()
    def shaText = (sha | formatRule).text.trim()
    return shaText
}

/**
 * Gets the git commit count ahead master
 */
def getCommitCount() {
    def count0 = "git rev-list --count master..HEAD".execute()
    def count = "printf %03d ${count0.text}".execute()
    def countText = count.text.trim()
    return countText
}

def getSuffix() {
    def suffix = "${getCommitCount()}-${getCommitSha()}"

    return suffix
}

ext {
    suffix = getSuffix()
}

gradle.buildFinished {
    println()
    println "=============== Apk Info ==============="
    println "Version Name: " + android.defaultConfig.getVersionName() + getSuffix()
    println "========================================"
    println()
}

android {
    signingConfigs {
        release {
            if (project.hasProperty("storeFile")) {
                storeFile file("$project.storeFile")
                storePassword "$project.storePassword"
                keyAlias "$project.keyAlias"
                keyPassword "$project.keyPassword"
            }
        }
    }

    productFlavors {
        local {
            buildConfigField "boolean", "REPORT_CRASHS", "false"
        }

        publish {
            buildConfigField "boolean", "REPORT_CRASHS", "true"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled false
            versionNameSuffix suffix
        }

        dev {
            minifyEnabled false
            debuggable true
            signingConfig android.signingConfigs.debug
            zipAlignEnabled false
            versionNameSuffix suffix
        }
    }
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == 'release') {
        variant.buildConfigField "String", "SERVER_TYPE", "\"production\""
    } else if (variant.buildType.name == 'debug') {
        variant.buildConfigField "String", "SERVER_TYPE", "\"production\""
    } else {
        variant.buildConfigField "String", "SERVER_TYPE", "\"${variant.buildType.name}\""
    }

    variant.outputs.all { output ->
        outputFileName = "${android.defaultConfig.getVersionName()}-${getSuffix()}.apk"
    }
}